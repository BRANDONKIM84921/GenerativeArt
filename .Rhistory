?glm()
n = 100
res = 100
train <- data.frame(
x = runif(100, 0, 100),
y = rdist(100, 0, 100),
color = sample(c(color1, color2), 100, replace = T)
)
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(color1, color2), 100, replace = T)
)
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(color1, color2), 100, replace = T)
)
color1 = "#FF0000"
color2 = "#00FF00"
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(color1, color2), 100, replace = T)
)
View(train)
sequence <- seq(0, resolution, by = 1)
resolution = 100
sequence <- seq(0, resolution, by = 1)
test <- expand.grid(sequence, sequence)
names(test) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
model <- glm(color~., data = train, family = binomial(link = "logit"))
predictions <- predict(model, test, type="response")
predictions
test$color <- predict(model, test, type="response")
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = canvas, family = binomial(link = "logit"))
install.packages("neighbr")
?knn()
library(neighbr)
?knn
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- model$test_set_scores$categorical_target
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_manual(values = colors) +
theme_void()
library(ggplot2)
n = 100
resolution = 100
color1 = "#FF0000"
color2 = "#00FF00"
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_manual(values = colors) +
theme_void()
n = 100
resolution = 100
color1 = "#FF0000"
color2 = "#00FF00"
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
theme_void()
n = 100
resolution = 100
color1 = "#FF0000"
color2 = "#00FF00"
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2)
theme_void()
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2) +
theme_void()
color1
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2)
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient2(low = color1, high = color2) +
theme_void()
n = 100
resolution = 100
color1 = "#FF0000"
color2 = "#00FF00"
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient2(low = color1, high = color2) +
theme_void()
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE) +
scale_color_gradient2(low = color1, high = color2) +
theme_void()
n = 100
resolution = 100
color1 = "#c00000"
color2 = "#AE4371"
train <- data.frame(
x = runif(100, 0, 100),
y = runif(100, 0, 100),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient2(low = "WHITE", high = color2) +
theme_void()
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2) +
theme_void()
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_point(show.legend = FALSE)
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_point(show.legend = FALSE)
ggplot(data = canvas, mapping = aes(x = x, y = y, color = colors)) +
geom_point(show.legend = FALSE)
ggplot(data = canvas, mapping = aes(x = x, y = y, color = colors)) +
geom_point(show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2)
ggplot(data = canvas, mapping = aes(x = x, y = y, color = colors)) +
geom_raster(show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2)
ggplot(data = canvas, mapping = aes(x = x, y = y, color = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_color_gradient(low = color1, high = color2)
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_gradient(low = color1, high = color2)
n = 100
resolution = 100
color1 = "#c00000"
color2 = "#AE4371"
train <- data.frame(
x = rnorm(100, 0, 1),
y = rnorm(100, 0, 1),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_gradient(low = color1, high = color2) +
theme_void()
n = 100
resolution = 100
color1 = "#c00000"
color2 = "#AE4371"
train <- data.frame(
x = rbinom(100, 20, 0.5),
y = rbinom(100, 20, 0.5),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_gradient(low = color1, high = color2) +
theme_void()
n = 100
resolution = 100
color1 = "#c00000"
color2 = "#AE4371"
train <- data.frame(
x = rbinom(100, 20, 0.5),
y = rbinom(100, 20, 0.5),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_gradient(low = color1, high = color2) +
theme_void()
n = 100
resolution = 100
color1 = "#c00000"
color2 = "#AE4371"
train <- data.frame(
x = rbinom(100, 20, 0.3),
y = rbinom(100, 20, 0.3),
color = sample(c(0, 1), 100, replace = T)
)
sequence <- seq(0, resolution, by = 1)
canvas <- expand.grid(sequence, sequence)
names(canvas) <- c("x", "y")
model <- glm(color~., data = train, family = binomial(link = "logit"))
canvas$colors <- predict(model, test, type="response")
ggplot(data = canvas, mapping = aes(x = x, y = y, fill = colors)) +
geom_raster(interpolate = TRUE, show.legend = FALSE) +
scale_fill_gradient(low = color1, high = color2) +
theme_void()
